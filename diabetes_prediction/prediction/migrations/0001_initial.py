# Generated by Django 4.2.7 on 2025-04-07 10:57

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PredictionResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other')], max_length=10)),
                ('age', models.PositiveIntegerField()),
                ('height', models.FloatField(help_text='Height in cm')),
                ('weight', models.FloatField(help_text='Weight in kg')),
                ('bmi', models.FloatField(blank=True, null=True)),
                ('exercise_habits', models.CharField(choices=[('sedentary', 'Sedentary (little or no exercise)'), ('light', 'Light (exercise 1-3 times/week)'), ('moderate', 'Moderate (exercise 3-5 times/week)'), ('active', 'Active (exercise 6-7 times/week)'), ('very_active', 'Very Active (exercise multiple times/day)')], max_length=20)),
                ('prediction', models.BooleanField(help_text='True if diabetes predicted, False otherwise')),
                ('probability', models.FloatField(blank=True, help_text='Probability of diabetes', null=True)),
                ('risk_level', models.CharField(blank=True, choices=[('low', 'Low'), ('moderate', 'Moderate'), ('high', 'High'), ('very_high', 'Very High')], max_length=20, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='predictions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SugarReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_file', models.FileField(upload_to='sugar_reports/')),
                ('uploaded_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('processed', models.BooleanField(default=False)),
                ('glucose_level', models.FloatField(blank=True, null=True)),
                ('hba1c', models.FloatField(blank=True, null=True)),
                ('fasting_glucose', models.FloatField(blank=True, null=True)),
                ('postprandial_glucose', models.FloatField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sugar_reports', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='Recommendation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('diet', 'Diet'), ('exercise', 'Exercise'), ('lifestyle', 'Lifestyle'), ('medical', 'Medical')], max_length=20)),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('prediction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recommendations', to='prediction.predictionresult')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recommendations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
    ]
